<!DOCTYPE HTML>
<html>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>¿Cómo obtener el canal RGB de una imagen con HTML5?</title>
    <head>
        <link href="example.css" media="all" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <header>
            <h1>¿Cómo obtener el canal RGB de una imagen con HTML5?</h1>
        </header>
        <section>
            <article>
                <h1>Canvas</h1>
                <canvas id="canvas">
                    <p>Tu navegador no soporta Canvas.</p>
                </canvas>
                <h1>Imagenes RGB</h1>
                <img id="r"/>
                <img id="g"/>
                <img id="b"/>
            </article>
        </section>
        <script>
            var canvas = document.getElementById('canvas');// canvas
            var ctx = canvas.getContext('2d'); // contexto

            var imgR = document.getElementById('r');// imagen que representa el canal R
            var imgG = document.getElementById('g');// imagen que representa el canal G
            var imgB = document.getElementById('b');// imagen que representa el canal B

            var srcImg = "image.png";// imagen fuente

            // nueva imagen
            img = new Image();
            img.src = srcImg;

            // cargo la imagen
            img.onload = function() {

                // reescalamos el canvas a las dimenciones de la imagen
                canvas.width = img.width;
                canvas.height = img.height;

                // dibujamos la imagen en el Canvas
                ctx.drawImage(this, 0, 0);
                getRGB();

            };

            // pinta una imagen por canal
            function getRGB() 

                // obtenemos el ImageData
                var imgd = ctx.getImageData(0, 0, canvas.width, canvas.height);
                // obtenemos el ImageData para R
                var imgdR = ctx.getImageData(0, 0, canvas.width, canvas.height);
                // obtenemos el ImageData para G
                var imgdG = ctx.getImageData(0, 0, canvas.width, canvas.height);
                // obtenemos el ImageData para B
                var imgdB = ctx.getImageData(0, 0, canvas.width, canvas.height);

                // cada una de estos array va a tener un solo canal
                var pixR = imgdR.data;
                var pixG = imgdG.data;
                var pixB = imgdB.data;
                // va a tener los 3 canales; la usaremos 
                //para reestablecer los colores originales en el canvas
                var pix = imgd.data;

                // cambiamos el contraste
                for (var i = 0, n = pixR.length; i < n; i += 4) {
                    //Mantengo el canal R
                    pixR[i + 1] = 0;//G
                    pixR[i + 2] = 0;//B

                    //Mantengo el canal G
                    pixG[i] = 0;//R
                    pixG[i + 2] = 0;//B

                    //Mantengo el canal B
                    pixB[i] = 0;//R
                    pixB[i + 1] = 0;//B
                }

                // retornamos la data modificada al Canvas; canal R
                ctx.putImageData(imgdR, 0, 0);
                dataURL = canvas.toDataURL();
                imgR.src = dataURL;
                // retornamos la data modificada al Canvas; canal G
                ctx.putImageData(imgdG, 0, 0);
                dataURL = canvas.toDataURL();
                imgG.src = dataURL;
                // retornamos la data modificada al Canvas; canal B
                ctx.putImageData(imgdB, 0, 0);
                dataURL = canvas.toDataURL();
                imgB.src = dataURL;
                // retornamos la data original al Canvas; canal RGB
                ctx.putImageData(imgd, 0, 0);
            }
        </script>
    </body>
</html>
